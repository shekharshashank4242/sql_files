#------KPI_1

CREATE TABLE KPI_1 
(
YEARS VARCHAR(30),
TOTAL_LOAN INT,
TOTAL_PAYMENT INT,
TOTAL_REVOL_BALANCE INT,
NO_OF_LOAN INT,
TOTAL_PRINICPAL INT,
TOTAL_RECOVERIES INT
);
DESC KPI_1;

INSERT INTO KPI_1(YEARS, TOTAL_LOAN, TOTAL_PAYMENT,TOTAL_REVOL_BALANCE,NO_OF_LOAN,TOTAL_PRINICPAL,
TOTAL_RECOVERIES) 
(SELECT YEAR(ISSUE_DATE), SUM(LOAN_AMOUNT), SUM(TOTAL_PYMNT), SUM(REVOL_BAL),COUNT(ID),SUM(total_rec_prncp),
SUM(RECOVERIES) FROM FINANCE_DATA
GROUP BY 1 );


SELECT * FROM KPI_1;


#----KPI_2

CREATE TABLE KPI_2
(
GRADE varchar(40),
SUB_GRADE CHAR(10),
GRADEWISE_REVOL_BAL INT,
SUB_GRADEWISE_REVOL_BAL INT
);


SELECT * FROM KPI_2;

INSERT INTO KPI_2 (GRADE, SUB_GRADE, GRADEWISE_REVOL_BAL, SUB_GRADEWISE_REVOL_BAL)
(select distinct f.grade,f.sub_grade, d.total as gradewise_total_revol, 
s.total_sub as sub_gradewise_total_revol
 from finance_data f inner join
(select grade, sum(revol_bal) as total from finance_data group by grade) as d
on f.grade=d.grade join 
(select sub_grade, sum(revol_bal) as total_sub from finance_data group by 1) as s on
s.sub_grade=f.sub_grade
order by 1,2);

select * from kpi_2 order by grade, sub_grade;

DROP TABLE KPI_2;

#----kpi_3

CREATE TABLE KPI_3 
( VERIFICATION varchar(30),
TOTAL_PAYMENT INT );


INSERT INTO KPI_3(VERIFICATION, TOTAL_PAYMENT)
(SELECT VERIFICATION_STATUS, SUM(TOTAL_PYMNT) FROM FINANCE_DATA
GROUP BY 1 ORDER BY 1);


SELECT * FROM KPI_3;



#-----KPI_4

CREATE TABLE KPI_4
(STATE VARCHAR(20),
MONTH CHAR(20),
LOAN INT,
TOTAL_STATE_WISE INT,
TOTAL_MONTH_WISE INT );

DESC KPI_4;

INSERT INTO KPI_4 SELECT A.STATE, MONTHNAME(A.ISSUE_DATE) MONTH, SUM(A.LOAN_AMOUNT) MONTH_WISE, B.STATE_WISE FROM
FINANCE_DATA AS A JOIN (SELECT STATE, SUM(LOAN_AMOUNT) STATE_WISE FROM FINANCE_DATA  GROUP BY 1) AS B ON  A.STATE=B.STATE 
GROUP BY 1,2 ORDER BY 1,2 ;

SELECT * FROM KPI_4;
DROP TABLE KPI_4;
DESC FINANCE_DATA;

INSERT INTO KPI_4
SELECT T1.STATE, MONTHNAME(T1.ISSUE_DATE) MONTH1 , SUM(T1.LOAN_AMOUNT),T2.STATE_WISE_TOTAL,T3.MONTH_WISE_TOTAL
FROM 
FINANCE_DATA T1 JOIN (SELECT STATE, SUM(LOAN_AMOUNT) STATE_WISE_TOTAL FROM FINANCE_DATA GROUP BY 1)
T2 ON T1.STATE=T2.STATE JOIN 
(SELECT MONTHNAME(ISSUE_DATE) MONTH2, SUM(LOAN_AMOUNT) MONTH_WISE_TOTAL FROM FINANCE_DATA GROUP BY 1) T3 ON
MONTHNAME(T1.ISSUE_DATE)=T3.MONTH2
GROUP BY 1,2,4,5
ORDER BY 1,2;

DROP TABLE KPI_4;
DESC KPI_5;


INSERT INTO KPI_5
SELECT YEAR(LAST_PYMNT_D)  YEAR,HOME_OWNERSHIP, COUNT(LAST_PYMNT_D) NUMBER_OF_LAST_PAY ,
T2.TOTAL_LAST
FROM FINANCE_DATA AS T1
JOIN (SELECT YEAR(LAST_PYMNT_D) YEAR, COUNT(LAST_PYMNT_D) TOTAL_LAST FROM FINANCE_DATA GROUP BY 1) AS T2 ON
YEAR(LAST_PYMNT_D)=T2.YEAR
WHERE YEAR(LAST_PYMNT_D) IS NOT NULL
GROUP BY 1,2,4
ORDER BY 1,2;
SELECT * FROM KPI_1;

SELECT * FROM KPI_2;
SELECT * FROM KPI_3;
SELECT * FROM KPI_4;

SELECT * FROM KPI_5;

select annual_income_bucket, sum(loan_amount), sum(loan_amount)/ T1.total 
from finance_data cross join (select sum(loan_amount) total from finance_data) as T1
group by 1 ,t1.total
order by 1;
 
 select year(issue_date), sum(loan_amount), 
 (sum(loan_amount)- lag( sum(loan_amount)) over (order by year(issue_date)))/lag( sum(loan_amount)) over (order by year(issue_date))
 YoY from finance_data group by 1 order by 1;
 
SELECT GRADE, SUM(LOAN_AMOUNT)/T2.TOTAL*100 AS PERCENTAGE_OF_TOTAL FROM FINANCE_DATA T1 CROSS JOIN 
(SELECT SUM(LOAN_AMOUNT) TOTAL FROM FINANCE_DATA ) T2 
GROUP BY 1,T2.TOTAL
ORDER BY 1;

DESC FINANCE_DATA;

SELECT YEAR(NEXT_PYMNT_D), COUNT(NEXT_PYMNT_D) FROM FINANCE_DATA GROUP BY 1 ;

SELECT YEAR(T1.LAST_PYMNT_D), T1.HOME_OWNERSHIP, COUNT(T1.LAST_PYMNT_D) NUMBER_OF_LAST_PAYMENT, T2.TOTAL YEARLY_TOTAL, T3.TOTAL2 HOME_ONWERSHIP_TOTAL
FROM FINANCE_DATA T1 JOIN (SELECT YEAR(LAST_PYMNT_D) LAST1, COUNT(LAST_PYMNT_D) TOTAL FROM FINANCE_DATA GROUP BY 1) AS T2
ON YEAR(T1.LAST_PYMNT_D)=T2.LAST1 JOIN
(SELECT HOME_OWNERSHIP, COUNT(LAST_PYMNT_D) TOTAL2 FROM FINANCE_DATA GROUP BY 1) AS T3 ON
T1.HOME_OWNERSHIP=T3.HOME_OWNERSHIP
WHERE YEAR(LAST_PYMNT_D) IS NOT NULL
GROUP BY 1,2,4
ORDER BY 1,2;


SELECT * FROM KPI_2;
DESC FINANCE_DATA;


SELECT YEAR(T1.ISSUE_DATE) AS YEAR, T1.GRADE, T1.SUB_GRADE,  SUM(T1.REVOL_BAL) TOTAL_BALANCE, T2.G_W GRADE_WISE,
T3.S_G_W SUB_GRADE_WISE, T4.Y_T
FROM FINANCE_DATA T1 JOIN
(SELECT GRADE, SUM(REVOL_BAL) G_W FROM FINANCE_DATA GROUP BY 1) AS T2 ON 
T1.GRADE=T2.GRADE JOIN 
(SELECT SUB_GRADE, SUM(REVOL_BAL) S_G_W FROM FINANCE_DATA GROUP BY 1) AS T3 ON
T1.SUB_GRADE=T3.SUB_GRADE JOIN
(SELECT YEAR(ISSUE_DATE) T, SUM(REVOL_BAL) Y_T FROM FINANCE_DATA GROUP BY 1) AS T4 ON
YEAR(T1.ISSUE_DATE)= T4.T
GROUP BY 1,2,3,5,6,7
ORDER BY 1,2,3;

SELECT * FROM KPI_2;


CREATE TABLE KPI_2
(
YEAR INT,
GRADE CHAR(10),
SUB_GRADE CHAR(10),
REVOLVING_BALANCE INT,
GRADEWISE_TOTAL INT,
SUB_GRADEWISE_TOTAL INT,
YEARWISE_TOTAL_REVOLVING INT
);

INSERT INTO KPI_2
SELECT YEAR(T1.ISSUE_DATE) AS YEAR, T1.GRADE, T1.SUB_GRADE,  SUM(T1.REVOL_BAL) TOTAL_BALANCE, T2.G_W GRADE_WISE,
T3.S_G_W SUB_GRADE_WISE, T4.Y_T
FROM FINANCE_DATA T1 JOIN
(SELECT GRADE, SUM(REVOL_BAL) G_W FROM FINANCE_DATA GROUP BY 1) AS T2 ON 
T1.GRADE=T2.GRADE JOIN 
(SELECT SUB_GRADE, SUM(REVOL_BAL) S_G_W FROM FINANCE_DATA GROUP BY 1) AS T3 ON
T1.SUB_GRADE=T3.SUB_GRADE JOIN
(SELECT YEAR(ISSUE_DATE) T, SUM(REVOL_BAL) Y_T FROM FINANCE_DATA GROUP BY 1) AS T4 ON
YEAR(T1.ISSUE_DATE)= T4.T
GROUP BY 1,2,3,5,6,7
ORDER BY 1,2,3;

SELECT * FROM KPI_2;

SELECT * FROM KPI_3;
DROP TABLE KPI_3;
DESC FINANCE_DATA;

CREATE TABLE KPI_3
(
VERIFICATION VARCHAR(50), TOTAL_PAYMENT INT,
TOTAL_LOAN INT, NUMBER_OF_LOANS INT );

INSERT INTO KPI_3
SELECT VERIFICATION_STATUS, ROUND(SUM(TOTAL_PYMNT),2) TOTAL_PYMNT,
SUM(LOAN_AMOUNT) TOTAL_LOAN, 
COUNT(ID) AS NUMBER_OF_LOANS
FROM FINANCE_DATA
GROUP BY 1
ORDER BY 1;

SELECT * FROM KPI_3;
SELECT * FROM KPI_4;
SELECT * FROM KPI_5;
select * from kpi_2;
select * from kpi_1;
